import keras
from keras.layers import Conv2D, UpSampling2D, Input
from keras.models import Model, Sequential
from keras.preprocessing.image import ImageDataGenerator, img_to_array, load_img
from skimage.color import rgb2lab, lab2rgb
from skimage.transform import resize
from skimage.io import imsave

import numpy as np
import tensorflow as tf
import matplotlib.pyplot as plt

data_path = ''

#normalize data
train_normalize = ImageDataGenerator(rescale = 1. / 255)

train = train_normalize.flow_from_directory(data_path, target_size = (256,256), batch_size = 340, class_mode = None)

X = []
Y = []
for img in train[0]:
  try:
    lab = rgb2lab(img)
    X.append(lab[:,:,0])
    Y.append(lab[:,:,1:]/128)
  except:
      print('error')
    
X = np.array(X)
Y = np.array(Y)
X = X.reshape(X.shape+(1,))

model = Sequential()
model.add(Conv2D(64,(3,3), activation ="relu",padding="same", strides=2))#, input_shape(256,256,3)))
model.add(Conv2D(128,(3,3), activation ="relu",padding="same"))
model.add(Conv2D(128,(3,3), activation ="relu",padding="same", strides=2))
model.add(Conv2D(256,(3,3), activation ="relu",padding="same"))
model.add(Conv2D(256,(3,3), activation ="relu",padding="same", strides=2))
model.add(Conv2D(512,(3,3), activation ="relu",padding="same"))
model.add(Conv2D(512,(3,3), activation ="relu",padding="same"))
model.add(Conv2D(256,(3,3), activation ="relu",padding="same"))


model.add(Conv2D(128,(3,3), activation ="relu",padding="same"))
model.add(UpSampling2D((2,2)))
model.add(Conv2D(64,(3,3), activation ="relu",padding="same"))
model.add(UpSampling2D((2,2)))
model.add(Conv2D(32,(3,3), activation ="relu",padding="same"))
model.add(Conv2D(16,(3,3), activation ="relu",padding="same"))
model.add(Conv2D(2,(3,3), activation ="tanh",padding="same"))
model.add(UpSampling2D((2,2)))

model.compile(optimizer="adam", loss="mse", metrics=["accuracy"])
#model.summary()

model.fit(X,Y, validation_split=0.1, epochs = 5, batch_size = 16)

model.save("Colourization_.model")
